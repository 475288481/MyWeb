/* 从Google Fonts引入Poppins字体，支持300、400、500、600和700的字重 */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap");

/* 全局选择器，选中所有元素 */
* {
  /* 去除所有元素的外边距 */
  margin: 0;
  /* 去除所有元素的内边距 */
  padding: 0;
  /* 设置盒模型为border-box，让元素的内边距和边框包含在指定的宽度和高度内 */
  box-sizing: border-box;
  /* 设置所有元素的字体为引入的Poppins字体，若不可用则使用系统默认无衬线字体 */
  font-family: "Poppins", sans-serif;
}

/* 选中body元素 */
body {
  /* 设置页面背景颜色为深灰色 */
  background: #1f242d;
  /* 设置页面文字颜色为白色 */
  color: #fff;
  caret-color: transparent;
  user-select: none;
}

/* 选中类名为header的元素，通常用于页面头部 */
.header {
  /* 设置元素为固定定位，固定在页面某个位置 */
  position: fixed;
  /* 距离页面顶部0像素 */
  top: 0;
  /* 距离页面左侧0像素 */
  left: 0;
  /* 元素宽度占满整个页面 */
  width: 100%;
  /* 设置元素的内边距，上下20px，左右10% */
  padding: 20px 10%;
  /* 设置元素背景为透明 */
  background: transparent;
  /* 使用flex布局 */
  display: flex;
  /* 子元素在主轴上两端对齐 */
  justify-content: space-between;
  /* 子元素在交叉轴上居中对齐 */
  align-items: center;
  /* 设置元素的堆叠顺序，值越大越在上面 */
  z-index: 100;
}

/* 选中类名为logo的元素，通常用于页面的标志 */
.logo {
  /* 设置字体大小为25px */
  font-size: 25px;
  /* 设置文字颜色为白色 */
  color: #fff;
  /* 去除文字的下划线 */
  text-decoration: none;
  /* 设置字体加粗，字重为600 */
  font-weight: 600;
  /* 设置鼠标指针样式为默认样式 */
  cursor: default;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为slideRight的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideRight 1s ease forwards;
}

/* 选中类名为navbar下的所有a标签，通常用于导航栏链接 */
.navbar a {
  /* 设置元素为行内块级元素 */
  display: inline-block;
  /* 设置字体大小为18px */
  font-size: 18px;
  /* 设置文字颜色为白色 */
  color: #fff;
  /* 去除文字的下划线 */
  text-decoration: none;
  /* 设置字体加粗，字重为500 */
  font-weight: 500;
  /* 设置元素左侧外边距为35px */
  margin-left: 35px;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 设置过渡效果，持续0.3秒 */
  transition: 0.3s;
  /* 应用名为slideTop的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideTop 1s ease forwards;
  /* 动画延迟时间，根据自定义属性--i计算 */
  animation-delay: calc(0.2s * var(--i));
}

/* 选中类名为navbar下的a标签，当鼠标悬停或a标签有active类时的样式 */
.navbar a:hover,
.navbar a.active {
  /* 设置文字颜色为浅灰色 */
  color: #b7b2a9;
}

/* 选中类名为home的元素，通常用于页面的主内容区域 */
.home {
  /* 设置元素为相对定位 */
  position: relative;
  /* 元素宽度占满整个页面 */
  width: 100%;
  /* 元素高度为视口高度的100% */
  height: 100vh;
  /* 使用flex布局 */
  display: flex;
  /* 子元素在主轴上两端对齐 */
  justify-content: space-between;
  /* 子元素在交叉轴上居中对齐 */
  align-items: center;
  /* 设置元素的内边距，顶部70px，左右10%，底部0 */
  padding: 70px 10% 0;
}

/* 选中类名为home-content的元素，通常用于.home区域内的内容部分 */
.home-content {
  /* 设置元素的最大宽度为600px */
  max-width: 600px;
}

/* 选中类名为home-content下的所有h3标签 */
.home-content h3 {
  /* 设置字体大小为32px */
  font-size: 32px;
  /* 设置字体加粗，字重为700 */
  font-weight: 700;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为slideBottom的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideBottom 1s ease forwards;
  /* 动画延迟0.7秒开始 */
  animation-delay: 0.7s;
}

/* 选中类名为home-content下的第二个h3标签 */
.home-content h3:nth-of-type(2) {
  /* 设置元素底部外边距为30px */
  margin-bottom: 30px;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为slideTop的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideTop 1s ease forwards;
  /* 动画延迟0.7秒开始 */
  animation-delay: 0.7s;
}

/* 选中类名为home-content下h3标签内的所有span标签 */
.home-content h3 span {
  /* 设置文字颜色为浅灰色 */
  color: #b7b2a9;
}


/* 选中类名为home-content下的所有p标签 */
.home-content p {
  /* 设置字体大小为16px */
  font-size: 16px;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为slideLeft的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideLeft 1s ease forwards;
  /* 动画延迟0.7秒开始 */
  animation-delay: 0.7s;
}

/* 选中类名为home-img下的所有img标签，通常用于展示图片 */
.home-img img {
  /* 设置图片的最大宽度为450px */
  max-width: 450px;
  /* 设置图片的边框圆角为50%，使其呈圆形 */
  border-radius: 50%;
  /* 设置图片右侧外边距为-20px */
  margin-right: -20px;
  /* 为图片添加阴影效果，颜色为浅灰色 */
  box-shadow: 0 0 20px #b7b2a9;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为zoomIn的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态；同时应用名为floatImage的动画，持续4秒，使用ease-in-out缓动函数，无限循环 */
  animation: zoomIn 1s ease forwards, floatImage 4s ease-in-out infinite;
  /* 第一个动画延迟2秒开始，第二个动画延迟3秒开始 */
  animation-delay: 2s, 3s;
}

/* 选中类名为social-media下的所有a标签，通常用于社交媒体链接 */
.social-media a {
  /* 设置元素为行内flex布局 */
  display: inline-flex;
  /* 子元素在主轴上居中对齐 */
  justify-content: center;
  /* 子元素在交叉轴上居中对齐 */
  align-items: center;
  /* 设置元素宽度为40px */
  width: 40px;
  /* 设置元素高度为40px */
  height: 40px;
  /* 设置元素背景为透明 */
  background: transparent;
  /* 设置元素的边框，宽度2px，实线，颜色为浅灰色 */
  border: 2px solid #b7b2a9;
  /* 设置元素的边框圆角为50%，使其呈圆形 */
  border-radius: 50%;
  /* 设置文字颜色为浅灰色 */
  color: #b7b2a9;
  /* 设置字体大小为20px */
  font-size: 20px;
  /* 去除文字的下划线 */
  text-decoration: none;
  /* 设置元素的外边距，上30px，右15px，下30px，左0 */
  margin: 30px 15px 30px 0;
  /* 设置过渡效果，持续0.5秒 */
  transition: 0.5s ease;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为slideLeft的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideLeft 1s ease forwards;
  /* 动画延迟时间，根据自定义属性--i计算 */
  animation-delay: calc(0.2s * var(--i));
}

/* 选中类名为social-media下的a标签，当鼠标悬停时的样式 */
.social-media a:hover {
  /* 设置元素背景为浅灰色 */
  background: #b7b2a9;
  /* 设置文字颜色为深灰色 */
  color: #1f242d;
  /* 为元素添加阴影效果，颜色为浅灰色 */
  box-shadow: 0 0 20px #b7b2a9;
}

/* 选中类名为btn的元素，通常用于按钮 */
.btn {
  /* 设置元素为行内块级元素 */
  display: inline-block;
  /* 设置元素的内边距，上下12px，左右28px */
  padding: 12px 28px;
  /* 设置元素背景为浅灰色 */
  background: #b7b2a9;
  /* 去除文字的下划线 */
  text-decoration: none;
  /* 设置元素的边框圆角为40px */
  border-radius: 40px;
  /* 为元素添加阴影效果，颜色为浅灰色 */
  box-shadow: 0 0 10px #b7b2a9;
  /* 设置字体大小为16px */
  font-size: 16px;
  /* 设置文字颜色为深灰色 */
  color: #1f242d;
  /* 设置文字的字母间距为1px */
  letter-spacing: 1px;
  /* 设置字体加粗，字重为600 */
  font-weight: 600;
  /* 设置过渡效果，持续0.5秒 */
  transition: 0.5s ease;
  /* 初始透明度为0，元素不可见 */
  opacity: 0;
  /* 应用名为slideTop的动画，持续1秒，使用ease缓动函数，动画结束后保持最终状态 */
  animation: slideTop 1s ease forwards;
  /* 动画延迟2秒开始 */
  animation-delay: 2s;
}

/* 选中类名为btn的元素，当鼠标悬停时的样式 */
.btn:hover {
  /* 为元素添加更明显的阴影效果，颜色为浅灰色 */
  box-shadow: 0 0 20px #b7b2a9;
}

/* 选中类名为btn的元素，当按钮被点击激活时的样式 */
.btn:active {
  /* 去除元素的背景颜色 */
  background: none;
  /* 设置文字颜色为浅灰色 */
  color: #b7b2a9;
  /* 设置元素的边框，宽度2px，实线，颜色为浅灰色 */
  border: 2px solid #b7b2a9;
}

/* 定义名为slideRight的动画 */
@keyframes slideRight {
  /* 动画开始时的状态 */
  0% {
    /* 元素在水平方向向左偏移100px */
    transform: translateX(-100px);
  }
  /* 动画结束时的状态 */
  100% {
    /* 元素回到原来的水平位置 */
    transform: translateX(0);
    /* 元素完全可见 */
    opacity: 1;
  }
}

/* 定义名为slideLeft的动画 */
@keyframes slideLeft {
  /* 动画开始时的状态 */
  0% {
    /* 元素在水平方向向右偏移100px */
    transform: translateX(100px);
  }
  /* 动画结束时的状态 */
  100% {
    /* 元素回到原来的水平位置 */
    transform: translateX(0);
    /* 元素完全可见 */
    opacity: 1;
  }
}

/* 定义名为slideTop的动画 */
@keyframes slideTop {
  /* 动画开始时的状态 */
  0% {
    /* 元素在垂直方向向下偏移100px */
    transform: translateY(100px);
  }
  /* 动画结束时的状态 */
  100% {
    /* 元素回到原来的垂直位置 */
    transform: translateY(0);
    /* 元素完全可见 */
    opacity: 1;
  }
}

/* 定义名为slideBottom的动画 */
@keyframes slideBottom {
  /* 动画开始时的状态 */
  0% {
    /* 元素在垂直方向向上偏移100px */
    transform: translateY(-100px);
  }
  /* 动画结束时的状态 */
  100% {
    /* 元素回到原来的垂直位置 */
    transform: translateY(0);
    /* 元素完全可见 */
    opacity: 1;
  }
}

/* 定义名为zoomIn的动画 */
@keyframes zoomIn {
  /* 动画开始时的状态 */
  0% {
    /* 元素缩小为原来的0倍 */
    transform: scale(0);
  }
  /* 动画结束时的状态 */
  100% {
    /* 元素恢复到原来的大小 */
    transform: scale(1);
    /* 元素完全可见 */
    opacity: 1;
  }
}

/* 定义名为floatImage的动画 */
@keyframes floatImage {
  /* 动画开始时的状态 */
  0% {
    /* 元素在垂直方向位置不变 */
    transform: translateY(0);
  }
  /* 动画进行到50%时的状态 */
  50% {
    /* 元素在垂直方向向上偏移24px */
    transform: translateY(-24px);
  }
  /* 动画结束时的状态 */
  100% {
    /* 元素回到原来的垂直位置 */
    transform: translateY(0);
  }
}
